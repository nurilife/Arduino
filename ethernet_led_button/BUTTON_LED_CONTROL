#include <EtherCard.h>

static byte mymac[] = { 0x74, 0x69, 0x69, 0x2D, 0x30, 0x31 };
static byte myip[] = { 192, 168, 0, 6 };
static byte gwip[] = { 192, 168, 0, 1 };
int ledPin10 = 9;
byte Ethernet::buffer[700];
char const page[] PROGMEM =
  "<html>"
  "<head><title>"
  "LED Control"
  "</title></head>"
  "<body>"
  "<h3>Control LED</h3>"
  "<form>"
  "<button name=\"LED10\" value=\"ON\">Turn LED ON</button>"
  "&nbsp"
  "<button name=\"LED10\" value=\"OFF\">Turn LED OFF</button>"
  "</form>"
  "</body>"
  "</html>";

void setup () {
  pinMode(ledPin10, OUTPUT);
  Serial.begin(9600);
  Serial.println("Trying to get an IP...");
  Serial.print("MAC: ");
  for (byte i = 0; i < 6; ++i) {
    Serial.print(mymac[i], HEX);
    if (i < 5) Serial.print(':');
  }
  Serial.println();
  if (ether.begin(sizeof Ethernet::buffer, mymac) == 0) {
    Serial.println("Failed to access Ethernet controller");
  } else {
    Serial.println("Ethernet controller access: OK");
  }

   Serial.println("Setting up DHCP");
  if (!ether.dhcpSetup()) {
    Serial.println("DHCP failed");
  }
 
  ether.printIp("My IP: ", ether.myip);
  ether.printIp("Netmask: ", ether.netmask);
  ether.printIp("GW IP: ", ether.gwip);
  ether.printIp("DNS IP: ", ether.dnsip);
}

void loop () {
  word len = ether.packetReceive();
  word pos = ether.packetLoop(len);

  if (strstr((char *)Ethernet::buffer + pos, "LED10=ON") != 0) {
    Serial.println("Received ON command");
    digitalWrite(ledPin10, HIGH);
  }

  if (strstr((char *)Ethernet::buffer + pos, "LED10=OFF") != 0) {
    Serial.println("Received OFF command");
    digitalWrite(ledPin10, LOW);
  }

  memcpy_P(ether.tcpOffset(), page, sizeof page);
  ether.httpServerReply(sizeof page - 1);
}
